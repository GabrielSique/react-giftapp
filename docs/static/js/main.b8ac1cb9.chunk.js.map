{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"sMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OAEI,aADA,CACA,QAAMC,SAdW,SAACC,GAElBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAUT,EAGVU,SA1Bc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,aAgChCZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,oCCzCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEvB,ECFwB,SAACA,GAEzB,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDlBiBK,CAAa1B,GAA9BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAEb,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAqDhB,IAErD,sBAAKgB,UAAU,YAAf,UAEEI,GAAW,mBAAGJ,UAAU,mCAAb,qBAGLT,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAESA,GADCA,EAAIC,cEgBvBgB,EA9Ba,WAExB,MAAoC7C,mBAAS,CAAC,iBAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ+C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCjB5B6B,EAAUC,SAASC,cAAc,SAEvCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,I","file":"static/js/main.b8ac1cb9.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    //este handle cambia el estado y agrega una nueva categoria\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    //este handle sirve para dar enter y que se pueda agregar una categoria tomando en cuenta\r\n    // el setCategories que corresponde a GifExpertApp\r\n    const handleSubmit = (e) => {\r\n        //aca invocamos el e evento\r\n        e.preventDefault();\r\n\r\n        //este if es para que elimine los datos en blanco y que deba ser mayor a dos letras\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue, ...cats, ] );\r\n            setInputValue('');\r\n        }\r\n            \r\n    }\r\n\r\n    return (\r\n        //aca invocamos el handleSubmit al momento de dar la tecla enter\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type='Text'\r\n                value = { inputValue }\r\n\r\n                //este handle agrega una nueva categoria \r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n//aca estamos declarado la propiedad del setCategories que se encuentra en GifExpertApp\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=1pfZyEnvLuxCgqYWpLgGyNcHqcrP8krX`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    // console.log(id, title, url);\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid =  ({ category }) => {\r\n\r\n    const {data, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\" >{ category }</h3>\r\n\r\n            <div className=\"card-grid\">\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n                {\r\n                    data.map( img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { useState, useEffect } from \"react\"\r\nimport {getGifs} from '../helpers/getGif'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state; // retorna {data y loading}\r\n}\r\n","import React, { useState } from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nimport './index.css';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['Demon Slayer']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'Demon Slayer']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render(<GifExpertApp />, divRoot);"],"sourceRoot":""}